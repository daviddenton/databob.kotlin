buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.3.1'
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
    }
}

plugins {
    id 'com.github.kt3k.coveralls' version '2.0.1'
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'maven-publish'
apply plugin: 'provided-base'

archivesBaseName = 'databob.kotlin'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

version = project.hasProperty('releaseVersion') ? project.releaseVersion : 'LOCAL'
group = 'io.github.daviddenton'

description = 'Kill all builders!'

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testImplementation(platform("org.junit:junit-bom:$junit_version"))
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testImplementation 'com.natpryce:hamkrest:1.3.0.0'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/daviddenton/databob.kotlin")
            credentials {
                username = "daviddenton"
                password = System.getenv("GH_PACKAGES_TOKEN")
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            artifactId = archivesBaseName

            pom.withXml {
                asNode().appendNode('name', archivesBaseName)
                asNode().appendNode('description', description)
                asNode().appendNode('url', 'http://' + archivesBaseName + '.github.io')
                asNode().appendNode('developers').appendNode('developer').
                        appendNode('name', 'David Denton').parent().
                        appendNode('email', 'mail@daviddenton.github.io')
                asNode().appendNode('scm').
                        appendNode('url', 'git@github.com:daviddenton/' + archivesBaseName + '.git').parent().
                        appendNode('connection', 'scm:git:git@github.com:daviddenton/' + archivesBaseName + '.git').parent().
                        appendNode('developerConnection', 'scm:git:git@github.com:daviddenton/' + archivesBaseName + '.git')
                asNode().appendNode('licenses').appendNode('license').
                        appendNode('name', 'Apache License, Version 2.0').parent().
                        appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.html')
            }
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}
